<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    <!-- 该 BeanPostProcessor 将自动起作用，对标注 @Autowired 的 Bean 进行自动注入-->
    <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->
    <!--<context:component-scan base-package="com.zz.zz"/>-->

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="maxActive" value="${maxActive}"/>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${minIdle}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="validationQuery" value="select 0"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!--配置sessionFactory-->
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- value="classpath*:" 自动扫描mapping.xml文件-->
        <property name="mapperLocations" value="classpath:mappers/userMapper.xml">
        </property>
    </bean>


    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <!--   装配dao接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tt.javaserver.web.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>
    <!-- 声明式事务管理 -->
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--<bean id="userAwardsManager" class="com.zz.javaserver.user.biz.UserAwardsManager"/>-->
    <!--注解事物切面-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->



    <!--&lt;!&ndash; 配置事务通知 &ndash;&gt;-->
    <!--<tx:advice id="advice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 默认只处理运行时异常，可加rollback-for="Exception/Throwable"等处理所有异常或包括错误 &ndash;&gt;-->
            <!--<tx:method name="insert*" propagation="REQUIRED"-->
                       <!--rollback-for="Exception" />-->
            <!--<tx:method name="update*" propagation="REQUIRED"-->
                       <!--rollback-for="Exception" />-->
            <!--<tx:method name="delete*" propagation="REQUIRED"-->
                       <!--rollback-for="Exception" />-->
            <!--<tx:method name="*" propagation="SUPPORTS" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; 配置切面织入的范围,后边要把事务边界定在service层 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="advice"-->
                     <!--pointcut="execution(* scm.service.impl.*.*(..))" />-->
    <!--</aop:config>-->




</beans>

















