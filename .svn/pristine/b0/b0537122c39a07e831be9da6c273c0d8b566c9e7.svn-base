package com.tt.javaserver.web.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;

/**
 * Created by GCL on 17/5/2.
 */
@RequestMapping("file")
@Controller
public class FileControllerTest {
    /**
     * 文件上传功能
     * @param file
     * @return
     * @throws IOException
     */
    @RequestMapping(value="/upload",method= RequestMethod.POST)
    @ResponseBody
    public String upload(MultipartFile file, HttpServletRequest request) throws IOException{
//        String path = request.getSession().getServletContext().getRealPath("upload");
        String path = "/Users/apple/IDEA/upload";
        String fileName = file.getOriginalFilename();
        File dir = new File(path,fileName);
        System.out.println("path====="+path);
        System.out.println("filename====="+fileName);

        if(!dir.exists()){
            dir.mkdirs();
        }
        //MultipartFile自带的解析方法
        file.transferTo(dir);
        return "ok!";
    }

    /**
     * 文件下载功能
     * @param request
     * @param response
     * @throws Exception
     */
    @RequestMapping("/down")
    public void down(HttpServletRequest request,HttpServletResponse response) throws Exception{
        //模拟文件，myfile.txt为需要下载的文件
        String fileName = request.getSession().getServletContext().getRealPath("upload")+"/2.jpg";
        //获取输入流
        InputStream bis = new BufferedInputStream(new FileInputStream(new File(fileName)));
        //假如以中文名下载的话
        String filename = "下载文件.jpg";
        //转码，免得文件名中文乱码
        filename = URLEncoder.encode(filename,"UTF-8");
        //设置文件下载头
        response.addHeader("Content-Disposition", "attachment;filename=" + filename);
        //1.设置文件ContentType类型，这样设置，会自动判断下载文件类型
        response.setContentType("multipart/form-data");
        BufferedOutputStream out = new BufferedOutputStream(response.getOutputStream());
        int len = 0;
        while((len = bis.read()) != -1){
            out.write(len);
            out.flush();
        }
        out.close();
    }

    /**
     * 把其中一个文件夹拷贝到另一个文件夹中
     * 1，返回值类型是void
     * 2，参数列表File src,File dest
     * @param src
     * @param dest
     * @throws IOException
     */
    public static void copy(File src, File dest) throws IOException {
        //1，在目标文件夹中创建原文件夹
        File newDir = new File(dest,src.getName());
        newDir.mkdir();
        //2，获取文件夹中所有的文件或文件夹，存储在File数组中
        File[] subFiles = src.listFiles();
        //3，遍历数组
        for (File subFile : subFiles) {
            //4，如果是文件，就用IO流读写(只能读写文件，不能读写文件夹)
            if(subFile.isFile()) {
                BufferedInputStream bis = new BufferedInputStream(
                        new FileInputStream(subFile));
                BufferedOutputStream bos = new BufferedOutputStream(
                        new FileOutputStream(new File(newDir,newDir.getName())));

                int index;
                while((index = bis.read()) != -1) {
                    bos.write(index);
                }
                bis.close();
                bos.close();
                //5，如果是文件夹，就递归调用
            } else {
                copy(subFile,newDir);
            }
        }


    }

}
